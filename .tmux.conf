# -- general -------------------------------------------------------------------

# set -g default-terminal "xterm-256color" # colors!
set -g default-terminal "screen-256color"
set -ga terminal-overrides ",xterm-256color*:Tc"
# set-option -g default-terminal "screen-256color"
# set-option -sa terminal-overrides ',xterm-256color:RGB'

setw -g xterm-keys on
set -s escape-time 10                     # faster command sequences
set -sg repeat-time 600                   # increase repeat timeout
set -s focus-events on

set -g extended-keys always

unbind C-b
unbind C-z
set -g prefix C-x                       # GNU-Screen compatible prefix
bind C-x send-prefix

set -q -g status-utf8 on                  # expect UTF-8 (tmux < 2.2)
setw -q -g utf8 on

set -g history-limit 50000                 # boost history

# edit configuration
bind e new-window -n "worknotes" "EDITOR=\${EDITOR//mvim/nvim} && EDITOR=\${EDITOR//gvim/nvim} && \${EDITOR:-nvim} ~/myworkspace/worknotes/notes.md"

# reload configuration
bind r source-file ~/.tmux.conf \; display-message '~/.tmux.conf sourced'

# -- display -------------------------------------------------------------------

set -g base-index 1           # start windows numbering at 1
setw -g pane-base-index 1     # make pane numbering consistent with windows

setw -g automatic-rename on   # rename window to reflect current program
set -g renumber-windows on    # renumber windows when a window is closed

set -g set-titles on          # set terminal title

set -g display-panes-time 800 # slightly longer pane indicators display time
set -g display-time 1000      # slightly longer status messages display time

set -g status-interval 10     # redraw status line every 10 seconds

# clear both screen and history
# bind -n C-l send-keys C-l \; run 'sleep 0.2' \; clear-history

# activity
set -g monitor-activity on
set -g visual-activity off

set-option -g detach-on-destroy off

# mouse behavior
setw -g mouse on


# -- navigation ----------------------------------------------------------------

# create session
# bind C-c new-session
bind -r T run "~/.tmux-sessionizer.sh terminal"
bind -r H run "~/.tmux-sessionizer.sh ~/development/filk8s/k8s-platform"
bind -r G run "~/.tmux-sessionizer.sh ~/development/filk8s/k8s-config"
bind -r S run "~/.tmux-switch-sessions.sh"
bind -r t run "~/.tmux-sessionizer.sh"


# find session
bind C-f command-prompt -p find-session 'switch-client -t %%'

# split current window horizontally
bind - split-window -v
# split current window vertically
bind | split-window -h

# pane navigation
# bind -r C-h select-pane -L  # move left
# bind -r C-j select-pane -D  # move down
# bind -r C-k select-pane -U  # move up
# bind -r C-l select-pane -R  # move right

bind-key -n M-h select-pane -L # alt-h move left
bind-key -n M-j select-pane -D # alt-j move down
bind-key -n M-k select-pane -U # alt-k move up
bind-key -n M-l select-pane -R # alt-k move right
bind-key -n M-Space resize-pane -Z # zoom pane
# bind > swap-pane -D       # swap current pane with the next one
# bind < swap-pane -U       # swap current pane with the previous one

# remap clear screen after installing vim-tmux-navigator
bind C-l send-keys 'C-l' # warning: it will be conflict with `select-pane -R` binging
# maximize current pane
# not required, prefix + Z will do that.
# bind + run 'cut -c3- ~/.tmux.conf | sh -s _maximize_pane "#{session_name}" #D'

# window navigation
unbind n
unbind p
bind -r C-p previous-window # select previous window
bind -r C-n next-window     # select next window
# bind Tab last-window        # move to last active window
bind -r ^ last-window        # move to last active window

# session navigation
# bind -n BTab switch-client -l  #toggle last session
bind -r C-x switch-client -l


# toggle mouse
bind m run "cut -c3- ~/.tmux.conf | sh -s _toggle_mouse"


# -- urlview -------------------------------------------------------------------

bind U run "cut -c3- ~/.tmux.conf | sh -s _urlview #{pane_id}"


# -- facebook pathpicker -------------------------------------------------------

# bind F run "cut -c3- ~/.tmux.conf | sh -s _fpp #{pane_id}"


# -- list choice (tmux < 2.4) --------------------------------------------------

# vi-choice is gone in tmux >= 2.4
run -b 'tmux bind -t vi-choice h tree-collapse 2> /dev/null || true'
run -b 'tmux bind -t vi-choice l tree-expand 2> /dev/null || true'
run -b 'tmux bind -t vi-choice K start-of-list 2> /dev/null || true'
run -b 'tmux bind -t vi-choice J end-of-list 2> /dev/null || true'
run -b 'tmux bind -t vi-choice H tree-collapse-all 2> /dev/null || true'
run -b 'tmux bind -t vi-choice L tree-expand-all 2> /dev/null || true'
run -b 'tmux bind -t vi-choice Escape cancel 2> /dev/null || true'


# -- edit mode (tmux < 2.4) ----------------------------------------------------

# vi-edit is gone in tmux >= 2.4
run -b 'tmux bind -ct vi-edit H start-of-line 2> /dev/null || true'
run -b 'tmux bind -ct vi-edit L end-of-line 2> /dev/null || true'
run -b 'tmux bind -ct vi-edit q cancel 2> /dev/null || true'
run -b 'tmux bind -ct vi-edit Escape cancel 2> /dev/null || true'


# -- copy mode -----------------------------------------------------------------

# do not go to bottom after select and copy
unbind -T copy-mode-vi MouseDragEnd1Pane

# bind Enter copy-mode # enter copy mode
#
# run -b 'tmux bind -t vi-copy v begin-selection 2> /dev/null || true'
# run -b 'tmux bind -T copy-mode-vi v send -X begin-selection 2> /dev/null || true'
# run -b 'tmux bind -t vi-copy C-v rectangle-toggle 2> /dev/null || true'
# run -b 'tmux bind -T copy-mode-vi C-v send -X rectangle-toggle 2> /dev/null || true'
# run -b 'tmux bind -t vi-copy y copy-selection 2> /dev/null || true'
# run -b 'tmux bind -T copy-mode-vi y send -X copy-selection-and-cancel 2> /dev/null || true'
# run -b 'tmux bind -t vi-copy Escape cancel 2> /dev/null || true'
# run -b 'tmux bind -T copy-mode-vi Escape send -X cancel 2> /dev/null || true'
# run -b 'tmux bind -t vi-copy H start-of-line 2> /dev/null || true'
# run -b 'tmux bind -T copy-mode-vi H send -X start-of-line 2> /dev/null || true'
# run -b 'tmux bind -t vi-copy L end-of-line 2> /dev/null || true'
# run -b 'tmux bind -T copy-mode-vi L send -X end-of-line 2> /dev/null || true'

setw -g mode-keys vi

bind-key [ copy-mode
bind-key ] paste-buffer

# Setup 'v' to begin selection as in Vim
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi y send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

set-option -g pane-active-border-style fg=yellow
set-option -g pane-border-style fg=cyan

# Set window notifications
setw -g monitor-activity on
set -g visual-activity on

# Enable native Mac OS X copy/paste
set-option -g default-command "/bin/bash -c 'which reattach-to-user-namespace >/dev/null && exec reattach-to-user-namespace $SHELL -l || exec $SHELL -l'"

# Allow the arrow key to be used immediately after changing windows
set-option -g repeat-time 0

# rename windows
set-option -g status-interval 5
set-option -g automatic-rename on
set-option -g automatic-rename-format '#{b:pane_current_path}'


# copy to X11 clipboard
if -b 'command -v xsel > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | xsel -i -b"'
if -b '! command -v xsel > /dev/null 2>&1 && command -v xclip > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | xclip -i -selection clipboard >/dev/null 2>&1"'
# copy to macOS clipboard
if -b 'command -v pbcopy > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | pbcopy"'
if -b 'command -v reattach-to-user-namespace > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | reattach-to-user-namespace pbcopy"'
# copy to Windows clipboard
if -b 'command -v clip.exe > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | clip.exe"'
if -b '[ -c /dev/clipboard ]' 'bind y run -b "tmux save-buffer - > /dev/clipboard"'


# -- buffers -------------------------------------------------------------------

bind b list-buffers  # list paste buffers
bind p paste-buffer  # paste from the top paste buffer
bind P choose-buffer # choose which buffer to paste from


# -- user defined overrides ----------------------------------------------------
# source -q ~/.tmux.conf.local

# -- plugins --
# set -g @plugin 'tmux-plugins/tmux-logging'
set -g @plugin 'christoomey/vim-tmux-navigator'
# set -g @plugin 'egel/tmux-gruvbox'
# set -g @tmux-gruvbox 'dark' # or 'light'

set -g @plugin 'dracula/tmux'
set -g @dracula-plugins "kubernetes-context"


# available colors: white, gray, dark_gray, light_purple, dark_purple, cyan, green, orange, red, pink, yellow
# set -g @dracula-[plugin-name]-colors "[background] [foreground]"
set -g @dracula-kubernetes-context-colors "dark_purple dark_gray"
# it can accept `session`, `smiley`, `window`, or any character.
set -g @dracula-show-left-icon session
set -g @dracula-show-flags true
set -g @dracula-border-contrast true
# set -g @dracula-show-powerline true
# set -g @dracula-show-left-sep î‚¸


# # set -g @dracula-plugins "cpu-usage ram-usage"
# set -g @dracula-cpu-display-load true
# set -g @dracula-battery-label "Battery"
# set -g @dracula-military-time true
# set -g @dracula-day-month true
# set -g @dracula-show-left-icon session
# set -g @dracula-border-contrast true
# set -g @dracula-show-empty-plugins false


# set -g @plugin 'jimeh/tmux-themepack'
# set -g @themepack 'powerline/double/blue'
# set -g status-right ' #{?client_prefix,#[reverse]<Prefix>#[noreverse] ,}"#{=21:pane_title}" %H:%M %d-%b-%y'

set -g status-position top

# rename windows
set-option -g status-interval 5
set-option -g automatic-rename on
set-option -g automatic-rename-format '#{b:pane_current_path}'

## Keep this at the very bottom of the line
run '~/.tmux/plugins/tpm/tpm'
